{
    "compilerOptions": {
        /* Basic Options */
        "target": "ES5",
        /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
        "module": "commonjs",
        /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
        // "lib": [],                             /* Specify library files to be included in the compilation. */
        "allowJs": true, /* Allow javascript files to be compiled. */
        // "checkJs": true,                       /* Report errors in .js files. */
        "jsx": "react",
        /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
        "declaration": false,
        /* Generates corresponding '.d.ts' file. */
        // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
        "sourceMap": false,
        /* Generates corresponding '.map' file. */
        // "outFile": "./",                       /* Concatenate and emit output to single file. */
        // "outDir": "./",                        /* Redirect output structure to the directory. */
        // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
        // "composite": true,                     /* Enable project compilation */
        // "removeComments": true,                /* Do not emit comments to output. */
        // "noEmit": true,                        /* Do not emit outputs. */
        // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
        // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
        /* Strict Type-Checking Options */
        // "strict": true, /* Enable all strict type-checking options. */
        "noImplicitAny": false,
        /* Raise error on expressions and declarations with an implied 'any' type. */
        // "strictNullChecks": true,              /* Enable strict null checks. */
        // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
        // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
        // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
        // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
        // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
        /* Additional Checks */
        // "noUnusedLocals": true,                /* Report errors on unused locals. */
        // "noUnusedParameters": true,            /* Report errors on unused parameters. */
        // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
        // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
        /* Module Resolution Options */
        // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
        // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
        // "typeRoots": [],                       /* List of folders to include type definitions from. */
        // "types": [],                           /* Type declaration files to be included in compilation. */
        // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "esModuleInterop": true,
        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
        /* Source Map Options */
        // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
        /* Experimental Options */
        "experimentalDecorators": true
        /* Enables experimental support for ES7 decorators. */
        // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
       
    },
    "include": [
        "src/**/*.ts"
    ],
    "exclude": [
        "node_modules",
        "src/static",
        "output"
    ]
}



/*{
  "compilerOptions": {
    "strictNullChecks": true,
    "moduleResolution": "node",
    "experimentalDecorators": true,
    "jsx": "preserve",
    "noUnusedParameters": true,
    "noUnusedLocals": true,
    "noImplicitAny": true,
    "target": "ES5",
    "baseUrl": ".",
    "module": "CommonJS",
    "paths": {
      "@/*": ["./src/*"]
    },
    "lib": [
      "dom",
      "ES6",
      "ESNext"
    ],
    "allowSyntheticDefaultImports": true,
    "rootDirs": [
      "/src"
    ],
    "forceConsistentCasingInFileNames": true,
    "noImplicitReturns": true,
    "allowJs": true
  },
  "include": [
    "./src"
  ],
  "exclude": [
     
  ]
}*/


// {
//   "compilerOptions": {
//     "target": "ES6", //指定ECMAScript目标版本 
//     "sourceMap": true, //生成相应的.map文件。
//     "baseUrl": ".", //解析非相对模块名的基准目录
//     "jsx": "preserve", //在.tsx文件里支持JSX："React"或"Preserve"。查看JSX。
//     "allowSyntheticDefaultImports": true, //允许从没有设置默认导出的模块中默认导入。这并不影响代码的显示，仅为了类型检查。
//     "moduleResolution": "node",  //决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）。查看模块解析了解详情。
//     "rootDirs": ["/src", "/test"],  //根（root）文件夹列表
//     "forceConsistentCasingInFileNames": true,  //禁止对同一个文件的不一致的引用
//     "noImplicitReturns": true,  //不是函数的所有返回路径都有返回值时报错。
//     "suppressImplicitAnyIndexErrors": true,  //阻止--noImplicitAny对缺少索引签名的索引对象报错。
//     "noUnusedLocals": true,  //若有未使用的局部变量则抛错。
//     "allowJs": true,  //允许编译javascript文件。
//     "experimentalDecorators": true,  //启用装饰器
//     "module":"CommonJS",  //指定生成哪个模块系统代
//     "paths": {    //模块名到基于baseUrl的路径映射的列表。
//       "@/*": ["./src/*"]
//     },
//     "allowUnusedLabels":true, //不报告未使用的标签错误。
//     "diagnostics":true, //显示诊断信息。
//     "declaration":true,//生成相应的.d.ts文件。
//     "alwaysStrict":true, //以严格模式解析并为每个源文件生成"use strict"语句
//     "checkJs":true, //在.js文件中报告错误。与--allowJs配合使用。  检查所有js文件
//     "help":true, //打印帮助信息。
//     "noUnusedParameters":true,//若有未使用的参数则抛错。
//     "pretty":true,
//   },
//   "include": ["./src"],
//   "exclude": [
//     "node_modules",
//   ]
// }